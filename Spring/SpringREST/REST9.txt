
CUSTOMER.JAVA

package com.example.demo.customer;

public class Customer {

	private String customerId;
	private String customerName;
	private String customerEmail;
	private Integer customerNum;
	public Customer(String customerId, String customerName, String customerEmail, Integer customerNum) {
		super();
		this.customerId = customerId;
		this.customerName = customerName;
		this.customerEmail = customerEmail;
		this.customerNum = customerNum;
	}
	public String getCustomerId() {
		return customerId;
	}
	public void setCustomerId(String customerId) {
		this.customerId = customerId;
	}
	public String getCustomerName() {
		return customerName;
	}
	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}
	public String getCustomerEmail() {
		return customerEmail;
	}
	public void setCustomerEmail(String customerEmail) {
		this.customerEmail = customerEmail;
	}
	public Integer getCustomerNum() {
		return customerNum;
	}
	public void setCustomerNum(Integer customerNum) {
		this.customerNum = customerNum;
	}
	
	
}


CUSTOMERCONTROLLER.JAVA

package com.example.demo.customer;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class CustomerController {

	@Autowired
	private CustomerService customerservice;
	
	@RequestMapping("/customers")
	public List<Customer> getAllCustomers(){
		return customerservice.getAllCustomers();
	}
	@RequestMapping("/customers/{id}")
	public Optional<Customer> getCustomer(@PathVariable String id){
		return customerservice.getCustomer(id);
	}
	@RequestMapping(method=RequestMethod.POST , value="/customers")
	public void addCustomer(@RequestBody Customer topic) {
		customerservice.addCustomer(topic);
	}
	@RequestMapping(method=RequestMethod.PUT , value="/customers/{id}")
	public void updateCustomers(@RequestBody Customer topic, @PathVariable String id) {
		customerservice.updateCustomers(id,topic);
	}
	@RequestMapping(method=RequestMethod.DELETE , value="/customers/{id}")
	public void deleteCustomer(@RequestBody Customer topic, @PathVariable String id) {
		customerservice.deleteCustomer(id,topic);
	}
}


CUSTOMERREPOSITORY.JAVA

package com.example.demo.customer;

import org.springframework.data.repository.CrudRepository;

public interface CustomerRepository extends CrudRepository<Customer,String>{

}


CUSTOMERSERVICE.JAVA

package com.example.demo.customer;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;


@Service
public class CustomerService {

	@Autowired
	private CustomerRepository customerrepo;
	
	public List<Customer> getAllCustomers()
	{
		List<Customer> cus = new ArrayList<>();
		customerrepo.findAll()
		.forEach(cus::add);
		return cus;
	}
	public Optional<Customer> getCustomer(String id)
	{
		return customerrepo.findById(id);
	}
	public void addCustomer(Customer cus) {
		customerrepo.save(cus);
	}
	public void updateCustomers(String id, Customer cus) {	
		customerrepo.save(cus);
	}
	public void deleteCustomer(String id, Customer cus) {
		
		customerrepo.deleteById(id);
		
	}
}
